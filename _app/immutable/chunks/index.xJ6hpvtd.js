var b=Object.defineProperty;var C=(t,e,n)=>e in t?b(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n;var _=(t,e,n)=>(C(t,typeof e!="symbol"?e+"":e,n),n);import{C as $,n as c,J as x,b as E,f as O,K as I,L as v,M as L,o as p,N as M,O as N,P as w,Q as P,R,S as U,T as j,U as B}from"./scheduler.tNw1xgdq.js";const o=new Set;let f;function D(){f={r:0,c:[],p:f}}function F(){f.r||$(f.c),f=f.p}function J(t,e){t&&t.i&&(o.delete(t),t.i(e))}function G(t,e,n,s){if(t&&t.o){if(o.has(t))return;o.add(t),f.c.push(()=>{o.delete(t),s&&(n&&t.d(1),s())}),t.o(e)}else s&&s()}function H(t,e,n){const s=t.$$.props[e];s!==void 0&&(t.$$.bound[s]=n,n(t.$$.ctx[s]))}function W(t){t&&t.c()}function X(t,e){t&&t.l(e)}function K(t,e,n){const{fragment:s,after_update:i}=t.$$;s&&s.m(e,n),p(()=>{const d=t.$$.on_mount.map(P).filter(v);t.$$.on_destroy?t.$$.on_destroy.push(...d):$(d),t.$$.on_mount=[]}),i.forEach(p)}function Q(t,e){const n=t.$$;n.fragment!==null&&(M(n.after_update),$(n.on_destroy),n.fragment&&n.fragment.d(e),n.on_destroy=n.fragment=null,n.ctx=[])}function T(t,e){t.$$.dirty[0]===-1&&(R.push(t),U(),t.$$.dirty.fill(0)),t.$$.dirty[e/31|0]|=1<<e%31}function Y(t,e,n,s,i,d,h=null,S=[-1]){const u=N;w(t);const a=t.$$={fragment:null,ctx:[],props:d,update:c,not_equal:i,bound:x(),on_mount:[],on_destroy:[],on_disconnect:[],before_update:[],after_update:[],context:new Map(e.context||(u?u.$$.context:[])),callbacks:x(),dirty:S,skip_bound:!1,root:e.target||u.$$.root};h&&h(a.root);let l=!1;if(a.ctx=n?n(t,e.props||{},(r,g,...m)=>{const y=m.length?m[0]:g;return a.ctx&&i(a.ctx[r],a.ctx[r]=y)&&(!a.skip_bound&&a.bound[r]&&a.bound[r](y),l&&T(t,r)),g}):[],a.update(),l=!0,$(a.before_update),a.fragment=s?s(a.ctx):!1,e.target){if(e.hydrate){j();const r=E(e.target);a.fragment&&a.fragment.l(r),r.forEach(O)}else a.fragment&&a.fragment.c();e.intro&&J(t.$$.fragment),K(t,e.target,e.anchor),B(),I()}w(u)}class Z{constructor(){_(this,"$$");_(this,"$$set")}$destroy(){Q(this,1),this.$destroy=c}$on(e,n){if(!v(n))return c;const s=this.$$.callbacks[e]||(this.$$.callbacks[e]=[]);return s.push(n),()=>{const i=s.indexOf(n);i!==-1&&s.splice(i,1)}}$set(e){this.$$set&&!L(e)&&(this.$$.skip_bound=!0,this.$$set(e),this.$$.skip_bound=!1)}}const V="4";typeof window<"u"&&(window.__svelte||(window.__svelte={v:new Set})).v.add(V);export{Z as S,G as a,W as b,F as c,X as d,Q as e,H as f,D as g,Y as i,K as m,J as t};
